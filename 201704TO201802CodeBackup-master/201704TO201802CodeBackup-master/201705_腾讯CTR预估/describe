其余的6个数据文件依次是：

1、user.csv (用户基础特征文件)：有 用户 id、年龄、性别、教育程度、婚恋状态、是否有小孩、家乡、常住地；

2、app_categories.csv ( App 特征文件)：有 Appid、app分类；

3、ad.csv (广告特征文件)：有 广告主 id、推广计划 id、广告 id、素材 id、App的 id、App 所在平台；

4、position.csv (广告位特征文件)：有 广告位 id、站点 id、广告位类型；

上面4个文件，我都可以根据 和训练集 预测集中相同的列，将他们的数据 merge 到训练集 预测集中，这样就完成了第一部分特征的提取，对于其他几部分特征，我之后就不再举这么详细的例子了！

5、user_installedapps.csv(用户 App 安装列表文件)：截止到训练数据时间段中第一天用户全部的 App 安装列表，但是这个文件中只有 144万用户，和训练集中的 259万用户 相差些，和测试集用户的交集是 15万(测试集中一共有29万用户)；

6、user_app_actions.csv (用户 App 安装流水文件)：有3列，用户 id、安装时间、appid，但是这个文件只有 78万用户，和训练集中的259万用户 相差些，和测试集用户的交集是 8万(测试集中一共有29万用户)。
数据中有不少除label不同外其他数据都相同的样本，对于这些样本就不能简单的当作噪音来处理，通过添加一些特征来标记他们之间的先后顺序。

还有关于label不准确问题的处理，因为有些回流的时间超过5天还有最后几天的回流可能还没有反馈回来，这些就会使得label取值不准确。针对这种情况，我们通过统计所有数据的回流时间，发现：90.00%的回流发生在一天之内，99.00%的回流发生在两天之内，99.90%的回流发生在三天之内。这一分析我们如何构造选取线下训练集和验证集很有帮助。

 特征交叉
不同特征之间的组合能起到更大的作用，我们分别使用户的年龄、性别、婚恋状态、教育程度、居住地与广告的creativeID、appID和positionID两两进行交叉，同时记录在这两个特征交叉时，广告CTR的排序特征。

特征贝叶斯平滑
在交叉得到的特征中，经观察，发现很多广告的CTR值并不准确，某些广告CTR值因为该广告总点击数较少而导致CTR较高，所以进行了贝叶斯平滑，贝叶斯平滑过程主要借鉴了博客上的思路。
